<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>9</version>
  </parent>

  <groupId>org.glowroot</groupId>
  <artifactId>glowroot-parent</artifactId>
  <version>0.5-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Glowroot Parent Project</name>
  <description>Glowroot Parent Project</description>
  <url>https://github.com/glowroot/glowroot</url>
  <inceptionYear>2011</inceptionYear>
  <organization>
    <name>Glowroot contributors</name>
    <url>https://github.com/glowroot</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <prerequisites>
    <maven>3.0.2</maven>
  </prerequisites>

  <modules>
    <module>misc/license-resource-bundle</module>
    <module>misc/checker-qual-jdk6</module>
    <module>plugin-api</module>
    <module>core</module>
    <module>test-harness</module>
    <module>testing/integration-tests</module>
    <module>testing/webdriver-tests</module>
    <module>testing/microbenchmarks</module>
    <module>testing/ui-sandbox</module>
    <module>plugins/servlet-plugin</module>
    <module>plugins/servlet-plugin-microbenchmarks</module>
    <module>plugins/jdbc-plugin</module>
    <module>plugins/jdbc-plugin-microbenchmarks</module>
    <module>plugins/logger-plugin</module>
    <module>plugins/logger-plugin-tests</module>
    <module>distribution</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/glowroot/glowroot.git</connection>
    <developerConnection>scm:git:git@github.com:glowroot/glowroot.git</developerConnection>
    <url>https://github.com/glowroot/glowroot</url>
  </scm>

  <properties>
    <!-- use custom-built jdk6 compatible checker framework annotations by default
         except when actually running checker framework code quality tests -->
    <checker.qual.group.id>org.glowroot.misc</checker.qual.group.id>
    <checker.qual.artifact.id>glowroot-checker-qual-jdk6</checker.qual.artifact.id>
    <checker.qual.version>${project.version}</checker.qual.version>
    <!-- the sonar.jdbc.password system property is set here instead of on the command line so it is
         not visible to ps -->
    <sonar.jdbc.password>${env.SONARQUBE_DB_PASSWORD}</sonar.jdbc.password>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
        <!-- TODO upgrade to netty 4 -->
        <version>3.9.4.Final</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.7</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.1.2</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.1.2</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>18.0</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>2.4.3</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.4.3</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>2.4.3</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>1.7.0</version>
      </dependency>
      <dependency>
        <groupId>org.easytesting</groupId>
        <artifactId>fest-reflect</artifactId>
        <version>1.4.1</version>
      </dependency>
      <dependency>
        <groupId>com.ning</groupId>
        <artifactId>async-http-client</artifactId>
        <version>1.8.14</version>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>1.1.1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Implementation-Title>${project.name}</Implementation-Title>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Build-Commit>${glowroot.build.commit}</Build-Commit>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[1.6,)</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[3.0,)</version>
                </requireMavenVersion>
                <requirePluginVersions />
                <requireUpperBoundDeps />
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
          ensure that only methods available in jdk 6 can
          be used even when compiling with a more recent jdk
        -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.12</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java16</artifactId>
            <version>1.1</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.2</version>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
          <configuration>
            <deployAtEnd>true</deployAtEnd>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.18</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.2.201409121644</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>auto-actived-add-license-jar-bundle</id>
      <activation>
        <file>
          <!-- only add license jar bundle to projects that are building a jar file -->
          <exists>${basedir}/src/main/java</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-remote-resources-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process</goal>
                </goals>
                <configuration>
                  <resourceBundles>
                    <!-- need to use explicit version below instead of ${project.version}
                         since when plugins inherit this pom ${project.version} is replaced
                         by the plugin's version -->
                    <resourceBundle>
                      org.glowroot.misc:glowroot-license-resource-bundle:0.5-SNAPSHOT
                    </resourceBundle>
                  </resourceBundles>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <configuration>
              <rules>
                <requireReleaseDeps />
                <requireReleaseVersion />
              </rules>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- use "travis-build/travis-build.sh checker" to execute this profile -->
      <id>checker</id>
      <properties>
        <checker.qual.group.id>org.checkerframework</checker.qual.group.id>
        <checker.qual.artifact.id>checker-qual</checker.qual.artifact.id>
        <checker.qual.version>1.8.7</checker.qual.version>
      </properties>
      <dependencies>
        <dependency>
          <!-- this is needed due to
               https://code.google.com/p/checker-framework/issues/detail?id=348 -->
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
          <version>3.0.0</version>
          <optional>true</optional>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
              <verbose>true</verbose>
              <fork>true</fork>
              <executable>${checker.install.dir}/checker/bin/javac_maven</executable>
              <compilerArgs>
                <arg>-processor</arg>
                <arg>org.checkerframework.checker.nullness.NullnessChecker</arg>
                <!-- checker.stubs.dir needs to be absolute path since relative path will be
                     interpreted from each module directory -->
                <arg>-Astubs=${checker.stubs.dir}</arg>
                <arg>-J-Djsr308.imports=org.checkerframework.checker.nullness.qual.*</arg>
              </compilerArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
